// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "AppRunnerSecurityGroupId": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "AppRunnerSGAFD09FB7",
          "GroupId",
        ],
      },
    },
    "ApplicationSubnets": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            Object {
              "Ref": "VpcapplicationSubnet1Subnet8B68205B",
            },
            ",",
            Object {
              "Ref": "VpcapplicationSubnet2Subnet29670962",
            },
          ],
        ],
      },
    },
    "BastionBastionHostId8F8CEB82": Object {
      "Description": "Instance ID of the bastion host. Use this to connect via SSM Session Manager",
      "Value": Object {
        "Ref": "Bastion6045F255",
      },
    },
    "BastionId": Object {
      "Value": Object {
        "Ref": "Bastion6045F255",
      },
    },
    "ContainerRegistryArn": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "ContainerRegistryCFC12DA8",
          "Arn",
        ],
      },
    },
    "RdsEndpoint": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "PostgresDB113281D2",
          "Endpoint.Address",
        ],
      },
    },
    "RdsSecretId": Object {
      "Value": Object {
        "Fn::Join": Array [
          "-",
          Array [
            Object {
              "Fn::Select": Array [
                0,
                Object {
                  "Fn::Split": Array [
                    "-",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "testPostgresDBSecret9EAC77303fdaad7efa858a3daf9490cf0a702aeb",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            Object {
              "Fn::Select": Array [
                1,
                Object {
                  "Fn::Split": Array [
                    "-",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "testPostgresDBSecret9EAC77303fdaad7efa858a3daf9490cf0a702aeb",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        ],
      },
    },
    "VpcId": Object {
      "Value": Object {
        "Ref": "Vpc8378EB38",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AppRunnerSGAFD09FB7": Object {
      "Properties": Object {
        "GroupDescription": "AppRunner Security Group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Bastion6045F255": Object {
      "DependsOn": Array [
        "BastionInstanceRoleDefaultPolicy457C3156",
        "BastionInstanceRoleD3B36EDD",
      ],
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "IamInstanceProfile": Object {
          "Ref": "BastionInstanceProfile8FFAF242",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.nano",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "BastionInstanceSecurityGroup71C3847E",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VpcapplicationSubnet1Subnet8B68205B",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "BastionInstanceProfile8FFAF242": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "BastionInstanceRoleD3B36EDD",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "BastionInstanceRoleD3B36EDD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BastionInstanceRoleDefaultPolicy457C3156": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ssmmessages:*",
                "ssm:UpdateInstanceInformation",
                "ec2messages:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BastionInstanceRoleDefaultPolicy457C3156",
        "Roles": Array [
          Object {
            "Ref": "BastionInstanceRoleD3B36EDD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BastionInstanceSecurityGroup71C3847E": Object {
      "Properties": Object {
        "GroupDescription": "test/Bastion/Resource/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "BastionHost",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ContainerRegistryCFC12DA8": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RepositoryName": "builderseries",
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "DbStorageEncryptionKeyE753B3BA": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "PostgresDB113281D2": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.micro",
        "DBName": "todo",
        "DBSubnetGroupName": Object {
          "Ref": "PostgresDBSubnetGroup5D444ECC",
        },
        "Engine": "postgres",
        "EngineVersion": "12",
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "DbStorageEncryptionKeyE753B3BA",
            "Arn",
          ],
        },
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "testPostgresDBSecret9EAC77303fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "app",
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "VPCSecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "PostgresDBSecurityGroupEF920298",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "PostgresDBSecretAttachmentED0FD794": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "testPostgresDBSecret9EAC77303fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "PostgresDB113281D2",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "PostgresDBSecurityGroupEF920298": Object {
      "Properties": Object {
        "GroupDescription": "Security group for PostgresDB database",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PostgresDBSecurityGroupfromtestAppRunnerSGAEEF9DE6IndirectPort8BB95F5B": Object {
      "Properties": Object {
        "Description": "from testAppRunnerSGAEEF9DE6:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "PostgresDB113281D2",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "PostgresDBSecurityGroupEF920298",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AppRunnerSGAFD09FB7",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "PostgresDB113281D2",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "PostgresDBSecurityGroupfromtestBastionInstanceSecurityGroup99CD1216IndirectPort320B5E5E": Object {
      "Properties": Object {
        "Description": "from testBastionInstanceSecurityGroup99CD1216:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "PostgresDB113281D2",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "PostgresDBSecurityGroupEF920298",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "BastionInstanceSecurityGroup71C3847E",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "PostgresDB113281D2",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "PostgresDBSubnetGroup5D444ECC": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnet group for PostgresDB database",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcdatabaseSubnet1SubnetD53A427B",
          },
          Object {
            "Ref": "VpcdatabaseSubnet2Subnet75663D63",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcapplicationSubnet1DefaultRouteD1F37131": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcpublicSubnet1NATGatewayA036E8A6",
        },
        "RouteTableId": Object {
          "Ref": "VpcapplicationSubnet1RouteTableF03E8296",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcapplicationSubnet1RouteTableAssociation75D5245D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcapplicationSubnet1RouteTableF03E8296",
        },
        "SubnetId": Object {
          "Ref": "VpcapplicationSubnet1Subnet8B68205B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcapplicationSubnet1RouteTableF03E8296": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcapplicationSubnet1Subnet8B68205B": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcapplicationSubnet2DefaultRoute928D347B": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcpublicSubnet2NATGateway4A29FD4F",
        },
        "RouteTableId": Object {
          "Ref": "VpcapplicationSubnet2RouteTable17378AED",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcapplicationSubnet2RouteTable17378AED": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcapplicationSubnet2RouteTableAssociationF25110CC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcapplicationSubnet2RouteTable17378AED",
        },
        "SubnetId": Object {
          "Ref": "VpcapplicationSubnet2Subnet29670962",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcapplicationSubnet2Subnet29670962": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdatabaseSubnet1RouteTableAssociationEE6CA36B": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcdatabaseSubnet1RouteTableF3B572E4",
        },
        "SubnetId": Object {
          "Ref": "VpcdatabaseSubnet1SubnetD53A427B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdatabaseSubnet1RouteTableF3B572E4": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdatabaseSubnet1SubnetD53A427B": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdatabaseSubnet2RouteTable1E50BD8E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdatabaseSubnet2RouteTableAssociationCADBAF9A": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcdatabaseSubnet2RouteTable1E50BD8E",
        },
        "SubnetId": Object {
          "Ref": "VpcdatabaseSubnet2Subnet75663D63",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdatabaseSubnet2Subnet75663D63": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet1DefaultRouteB88F9E93": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet1EIP411541E6": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcpublicSubnet1NATGatewayA036E8A6": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcpublicSubnet1EIP411541E6",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcpublicSubnet1RouteTable15C15F8E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet1RouteTableAssociation4E83B6E4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet1Subnet2BB74ED7": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet2DefaultRoute732F0BEB": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet2EIP811E07A7": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/publicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcpublicSubnet2NATGateway4A29FD4F": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcpublicSubnet2EIP811E07A7",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/publicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcpublicSubnet2RouteTableAssociationCCE257FF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet2RouteTableC5A6DF77": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet2SubnetE34B022A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/Vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testPostgresDBSecret9EAC77303fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"app\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
